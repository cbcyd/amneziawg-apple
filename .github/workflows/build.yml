name: Build and Sign amneziawg-apple

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-macos:
    name: Build and Sign for macOS
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      # Let the action check out to the default directory, which is the repo name

    - name: Verify Directory Structure
      run: ls -l # This is for debugging to see the folder structure

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
    
    - name: Set up Ruby and Bundler
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true
        # Tell the ruby action where to find the Gemfile
        working-directory: ./amneziawg-apple

    - name: Install SwiftLint
      run: |
        brew install swiftlint

    - name: Import Signing Certificate
      run: |
        # We run this from the root, so no cd needed here
        echo "${{ secrets.P12_BASE64 }}" | base64 --decode > certificate.p12
        security create-keychain -p "${{ secrets.P12_PASSWORD }}" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "${{ secrets.P12_PASSWORD }}" build.keychain
        security import certificate.p12 -k build.keychain -P "${{ secrets.P12_PASSWORD }}" -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple: -s -k "${{ secrets.P12_PASSWORD }}" build.keychain
        rm certificate.p12

    - name: Run Fastlane to Setup Signing
      env:
        FASTLANE_USER: ${{ secrets.APPLE_ID_USERNAME }}
        FASTLANE_PASSWORD: ${{ secrets.APPLE_ID_APP_SPECIFIC_PASSWORD }}
        FASTLANE_TEAM_ID: ${{ secrets.APPLE_DEVELOPER_TEAM_ID }}
      run: |
        # Explicitly change into the project directory first
        cd amneziawg-apple
        bundle exec fastlane setup_signing

    - name: Select Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.4'

    - name: Build and Sign macOS application
      run: |
        # Explicitly change into the project directory first
        cd amneziawg-apple
        # IMPORTANT: Use the same unique identifier as in your Fastfile
        xcodebuild -project WireGuard.xcodeproj \
                   -target "WireGuardmacOS" \
                   -configuration Release \
                   build \
                   CODE_SIGN_STYLE="Manual" \
                   DEVELOPMENT_TEAM="${{ secrets.APPLE_DEVELOPER_TEAM_ID }}" \
                   CODE_SIGN_IDENTITY="Apple Development" \
                   PRODUCT_BUNDLE_IDENTIFIER="com.your-github-username.amneziawg" \
                   OTHER_LDFLAGS="-lresolv"

    - name: Upload macOS Artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: AmneziaWG-macOS-Signed
        path: amneziawg-apple/build/Release/WireGuardmacOS.app
